package com.example.interviewprepare.architecture.patterns.observer

/*
    Паттерн "Обсервер" (или "Наблюдатель") — это поведенческий паттерн
    проектирования, который позволяет объектам (наблюдателям) подписываться на события,
    происходящие в другом объекте (субъекте). Когда субъект изменяется,
    он уведомляет всех своих наблюдателей о произошедших изменениях.

    ▎Плюсы паттерна "Обсервер":

    1. Слабая связанность:
    Наблюдатели и субъекты слабо связаны между собой, что позволяет
    легко добавлять или удалять наблюдателей.

    2. Масштабируемость:
    Легко добавлять новые типы наблюдателей без изменения кода субъекта.

    3. Упрощение кода:
    Упрощает реализацию механизма уведомления об изменениях в состоянии объекта.

    ▎Минусы паттерна "Обсервер":

    1. Сложность:
     Увеличивает сложность системы, особенно если количество наблюдателей велико.

    2. Проблемы с производительностью:
    Если много наблюдателей, уведомление может занять значительное время.

    3. Неопределенность порядка уведомлений:
    Наблюдатели могут быть уведомлены в произвольном порядке, что может привести к непредсказуемым результатам.
     */
interface Observer {
    fun update(temperature: Float)
}